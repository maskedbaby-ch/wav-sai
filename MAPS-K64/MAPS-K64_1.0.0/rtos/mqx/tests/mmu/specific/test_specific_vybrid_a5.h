/**HEADER**********************************************************************
*
* Copyright (c) 2013 Freescale Semiconductor;
* All Rights Reserved
*
*******************************************************************************
*
* THIS SOFTWARE IS PROVIDED BY FREESCALE "AS IS" AND ANY EXPRESSED OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL FREESCALE OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
* INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
* (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
* HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
* STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
* IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
* THE POSSIBILITY OF SUCH DAMAGE.
*
*******************************************************************************
*
* $FileName: test_config.h$
* $Version : 
* $Date    : 
*
* Comments:
*
* 
*
*END**************************************************************************/
#ifndef __test_config_h__
#define __test_config_h__

/** L1 1MB flags and referencese **/
#define MMU_L1_1MB_RW_SO_REF    0x00000C02
#define MMU_L1_1MB_RW_SO_FLAG   PSP_PAGE_TABLE_SECTION_SIZE(PSP_PAGE_TABLE_SECTION_SIZE_1MB) | PSP_PAGE_DESCR(PSP_PAGE_DESCR_ACCESS_RW_ALL) | PSP_PAGE_TYPE(PSP_PAGE_TYPE_STRONG_ORDER)
#define MMU_L1_1MB_RW_WT_REF    0x00000C0A
#define MMU_L1_1MB_RW_WT_FLAG   PSP_PAGE_TABLE_SECTION_SIZE(PSP_PAGE_TABLE_SECTION_SIZE_1MB) | PSP_PAGE_DESCR(PSP_PAGE_DESCR_ACCESS_RW_ALL) | PSP_PAGE_TYPE(PSP_PAGE_TYPE_CACHE_WTNWA)
#define MMU_L1_1MB_RW_CN_REF    0x00001C02
#define MMU_L1_1MB_RW_CN_FLAG   PSP_PAGE_TABLE_SECTION_SIZE(PSP_PAGE_TABLE_SECTION_SIZE_1MB) | PSP_PAGE_DESCR(PSP_PAGE_DESCR_ACCESS_RW_ALL) | PSP_PAGE_TYPE(PSP_PAGE_TYPE_CACHE_NON)

#define MMU_L1_1MB_RO_SO_REF    0x00008802
#define MMU_L1_1MB_RO_SO_FLAG   PSP_PAGE_TABLE_SECTION_SIZE(PSP_PAGE_TABLE_SECTION_SIZE_1MB) | PSP_PAGE_DESCR(PSP_PAGE_DESCR_ACCESS_RO_ALL) | PSP_PAGE_TYPE(PSP_PAGE_TYPE_STRONG_ORDER)
#define MMU_L1_1MB_RO_WT_REF    0x0000880A
#define MMU_L1_1MB_RO_WT_FLAG   PSP_PAGE_TABLE_SECTION_SIZE(PSP_PAGE_TABLE_SECTION_SIZE_1MB) | PSP_PAGE_DESCR(PSP_PAGE_DESCR_ACCESS_RO_ALL) | PSP_PAGE_TYPE(PSP_PAGE_TYPE_CACHE_WTNWA)
#define MMU_L1_1MB_RO_CN_REF    0x00009802
#define MMU_L1_1MB_RO_CN_FLAG   PSP_PAGE_TABLE_SECTION_SIZE(PSP_PAGE_TABLE_SECTION_SIZE_1MB) | PSP_PAGE_DESCR(PSP_PAGE_DESCR_ACCESS_RO_ALL) | PSP_PAGE_TYPE(PSP_PAGE_TYPE_CACHE_NON)

#define MMU_L1_1MB_NA_SO_REF    0x00000002
#define MMU_L1_1MB_NA_SO_FLAG   PSP_PAGE_TABLE_SECTION_SIZE(PSP_PAGE_TABLE_SECTION_SIZE_1MB) | PSP_PAGE_DESCR(PSP_PAGE_DESCR_NOACCESS_ALL) | PSP_PAGE_TYPE(PSP_PAGE_TYPE_STRONG_ORDER)
#define MMU_L1_1MB_NA_WT_REF    0x0000000A
#define MMU_L1_1MB_NA_WT_FLAG   PSP_PAGE_TABLE_SECTION_SIZE(PSP_PAGE_TABLE_SECTION_SIZE_1MB) | PSP_PAGE_DESCR(PSP_PAGE_DESCR_NOACCESS_ALL) | PSP_PAGE_TYPE(PSP_PAGE_TYPE_CACHE_WTNWA)
#define MMU_L1_1MB_NA_CN_REF    0x00001002
#define MMU_L1_1MB_NA_CN_FLAG   PSP_PAGE_TABLE_SECTION_SIZE(PSP_PAGE_TABLE_SECTION_SIZE_1MB) | PSP_PAGE_DESCR(PSP_PAGE_DESCR_NOACCESS_ALL) | PSP_PAGE_TYPE(PSP_PAGE_TYPE_CACHE_NON)


/** L2 4kB flags and referencese **/
#define MMU_L2_4KB_RW_SO_REF    0x00000032
#define MMU_L2_4KB_RW_SO_FLAG   PSP_PAGE_TABLE_SECTION_SIZE(PSP_PAGE_TABLE_SECTION_SIZE_4KB) | PSP_PAGE_DESCR(PSP_PAGE_DESCR_ACCESS_RW_ALL) | PSP_PAGE_TYPE(PSP_PAGE_TYPE_STRONG_ORDER)
#define MMU_L2_4KB_RW_WT_REF    0x0000003A
#define MMU_L2_4KB_RW_WT_FLAG   PSP_PAGE_TABLE_SECTION_SIZE(PSP_PAGE_TABLE_SECTION_SIZE_4KB) | PSP_PAGE_DESCR(PSP_PAGE_DESCR_ACCESS_RW_ALL) | PSP_PAGE_TYPE(PSP_PAGE_TYPE_CACHE_WTNWA)
#define MMU_L2_4KB_RW_CN_REF    0x00000072
#define MMU_L2_4KB_RW_CN_FLAG   PSP_PAGE_TABLE_SECTION_SIZE(PSP_PAGE_TABLE_SECTION_SIZE_4KB) | PSP_PAGE_DESCR(PSP_PAGE_DESCR_ACCESS_RW_ALL) | PSP_PAGE_TYPE(PSP_PAGE_TYPE_CACHE_NON)

#define MMU_L2_4KB_RO_SO_REF    0x00000222
#define MMU_L2_4KB_RO_SO_FLAG   PSP_PAGE_TABLE_SECTION_SIZE(PSP_PAGE_TABLE_SECTION_SIZE_4KB) | PSP_PAGE_DESCR(PSP_PAGE_DESCR_ACCESS_RO_ALL) | PSP_PAGE_TYPE(PSP_PAGE_TYPE_STRONG_ORDER)
#define MMU_L2_4KB_RO_WT_REF    0x0000022A
#define MMU_L2_4KB_RO_WT_FLAG   PSP_PAGE_TABLE_SECTION_SIZE(PSP_PAGE_TABLE_SECTION_SIZE_4KB) | PSP_PAGE_DESCR(PSP_PAGE_DESCR_ACCESS_RO_ALL) | PSP_PAGE_TYPE(PSP_PAGE_TYPE_CACHE_WTNWA)
#define MMU_L2_4KB_RO_CN_REF    0x00000262
#define MMU_L2_4KB_RO_CN_FLAG   PSP_PAGE_TABLE_SECTION_SIZE(PSP_PAGE_TABLE_SECTION_SIZE_4KB) | PSP_PAGE_DESCR(PSP_PAGE_DESCR_ACCESS_RO_ALL) | PSP_PAGE_TYPE(PSP_PAGE_TYPE_CACHE_NON)

#define MMU_L2_4KB_NA_SO_REF    0x00000002
#define MMU_L2_4KB_NA_SO_FLAG   PSP_PAGE_TABLE_SECTION_SIZE(PSP_PAGE_TABLE_SECTION_SIZE_4KB) | PSP_PAGE_DESCR(PSP_PAGE_DESCR_NOACCESS_ALL) | PSP_PAGE_TYPE(PSP_PAGE_TYPE_STRONG_ORDER)
#define MMU_L2_4KB_NA_WT_REF    0x0000000A
#define MMU_L2_4KB_NA_WT_FLAG   PSP_PAGE_TABLE_SECTION_SIZE(PSP_PAGE_TABLE_SECTION_SIZE_4KB) | PSP_PAGE_DESCR(PSP_PAGE_DESCR_NOACCESS_ALL) | PSP_PAGE_TYPE(PSP_PAGE_TYPE_CACHE_WTNWA)
#define MMU_L2_4KB_NA_CN_REF    0x00000042
#define MMU_L2_4KB_NA_CN_FLAG   PSP_PAGE_TABLE_SECTION_SIZE(PSP_PAGE_TABLE_SECTION_SIZE_4KB) | PSP_PAGE_DESCR(PSP_PAGE_DESCR_NOACCESS_ALL) | PSP_PAGE_TYPE(PSP_PAGE_TYPE_CACHE_NON)

/*Unsupported flags */
#define MMU_L2_16MB_RW_SO_FLAG   PSP_PAGE_TABLE_SECTION_SIZE(PSP_PAGE_TABLE_SECTION_SIZE_16MB) | PSP_PAGE_DESCR(PSP_PAGE_DESCR_ACCESS_RW_ALL) | PSP_PAGE_TYPE(PSP_PAGE_TYPE_STRONG_ORDER)
#define MMU_L2_64MB_RW_SO_FLAG   PSP_PAGE_TABLE_SECTION_SIZE(PSP_PAGE_TABLE_SECTION_SIZE_64KB) | PSP_PAGE_DESCR(PSP_PAGE_DESCR_ACCESS_RW_ALL) | PSP_PAGE_TYPE(PSP_PAGE_TYPE_STRONG_ORDER)


#define MMU_ADD_REGION_START    0x80400000
#define MMU_ADD_REGION_SIZE     0x00400000
#define MMU_ADD_REGION_ENTRIES  (MMU_ADD_REGION_SIZE >> 20)

#define MMU_IS_ENTRY_L2_DESC(x) ((x & 0x3ff) == 0x00000001)

#define MMU_L1_FLAG_SIFT        0
#define MMU_L1_FLAG_MASK        ((0xfffffu) << (MMU_L1_FLAG_SIFT))

#define MMU_L1_ADDR_SHIFT       (20)
#define MMU_L1_ADDR_MASK        ((0xfffu) << (MMU_L1_ADDR_SHIFT))

#define MMU_L2_FLAG_SIFT        0
#define MMU_L2_FLAG_MASK        ((0xfffffu) << (MMU_L2_FLAG_SIFT))

#define MMU_L2_ADDR_SHIFT       (12)
#define MMU_L2_ADDR_MASK        ((0xfffffu) << (MMU_L2_ADDR_SHIFT))
#endif
